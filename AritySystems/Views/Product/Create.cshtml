@using AritySystems.Common;
@model AritySystems.Data.Product
@{
    ViewBag.Title = "Create";
}
<div class="page-header">
    <h1>@(Model != null && Model.Id > 0 ? "Update" : "Add") Product</h1>
</div>
<div class="row">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(_ => _.Id)
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Chinese_Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Chinese_Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Chinese_Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.English_Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.English_Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.English_Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">MOQ</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @*@Html.LabelFor(model => model.Dollar_Price, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2"> Dollar Sales Price </label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Dollar_Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Dollar_Price, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @*@Html.LabelFor(model => model.RMB_Price, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2"> RMB Sales Price </label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.RMB_Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RMB_Price, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Unit, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Unit, System.Web.Mvc.Html.EnumHelper.GetSelectList(typeof(EnumHelpers.Units)),
                                                                     new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Unit, "", new { @class = "text-danger" })
            </div>
        </div>
        @*<div class="form-group">
            @Html.LabelFor(model => model.Parent_Id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select id="mySkills" multiple="multiple" required name="mySkillsName">
                    @if (ViewBag.productList != null)
                    {
                        foreach (var item in ViewBag.productList)
                        {
                            if (item.Text != null)
                            {
                                <option value="@item.Value">
                                    @item.Text
                                </option>
                            }
                        }
                    }
                </select>
            </div>
        </div>*@
        <div class="form-group">
            @Html.LabelFor(model => model.ParentIds, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ParentIds, ViewBag.productList as SelectList, "-- Select Parent Product --", new { @class = "form-control", @id = "parentProducts", @multiple = "multiple" })

                @Html.ValidationMessageFor(model => model.Parent_Id, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Suppliers, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Suppliers, ViewBag.supplierList as SelectList, "-- Select Suppliers --", new { @class = "form-control", @id = "suppliers", @multiple = "multiple" })

                @Html.ValidationMessageFor(model => model.Parent_Id, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @cols = "2" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@(Model != null && Model.Id>0?"Update":"Add")" class="btn btn-success" />
                <input type="button" value="Cancel" class="btn btn-primary" onclick="location.href='@Url.Action("list","product")'" />
            </div>
        </div>
    </div>
    }
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script type="text/javascript">

    //var j = jQuery.noConflict();
    //j(function () {
    //    j('#mySkills').multiselect({
    //        includeSelectAllOption: true
    //    });
    //});

    $(function () {
        $('#parentProducts, #suppliers').multiselect({
            includeSelectAllOption: true
        });
    });
</script>