@using AritySystems.Data
@model Order
@{
    ViewBag.Title = "Order Details";
    var userType = (Session["UserType"] != null) ? (int)Session["UserType"] : 0;
}
<style>
    .borderless td, .borderless th {
        border: none !important;
    }
</style>
<div class="container">
    <div class="page-header">
        <h1>Order Details</h1>
    </div>
    <div class="row">
        <div class="col-md-4">
            <div class="col-md-12">
                Status <span style="background-color:cadetblue;padding:4px;color:#fff;"> <i class="fa fa-refresh"></i> @(((AritySystems.Common.EnumHelpers.OrderStatus)Model.Status).ToString())</span>
            </div>
            <div class="col-md-12">
                Internal Order Status <span class="label label-success" style="padding:4px;color:#fff;"> <i class="fa fa-check-square-o"></i> @(((AritySystems.Common.EnumHelpers.InternalOrderStatus)Model.Internal_status).ToString())</span>
            </div>
            <div class="col-md-12">@Model.CreatedDate </div>
            <div class="col-md-12">
                @Model.Prefix
            </div>
            <div class="col-md-12">
                Order Total <b><i class="fa fa-jpy"></i>@Model.OrderLineItems.Sum(_ => (_.Quantity * _.RMBPurchasePrice))</b>
            </div>
            <div class="col-md-12" style="margin:25px 0px 10px 0;">
                <h4>Order Line Items</h4>
            </div>
        </div>
        @if (Model.Internal_status == (int)AritySystems.Common.EnumHelpers.InternalOrderStatus.Approved)
        {
            <div class="col-md-2 col-md-offset-5" style="text-align:right;"><button class="btn btn-success" onclick="location.href='@Url.Action("orderlist", "order")';"><i class="fa fa-print"></i> Genrate PI</button></div>}
        <div class="col-md-1 @((userType == (int)AritySystems.Common.EnumHelpers.UserType.Purchase || userType == (int)AritySystems.Common.EnumHelpers.UserType.Sales) && Model.Internal_status == (int)AritySystems.Common.EnumHelpers.InternalOrderStatus.Approved ? "":"col-md-offset-7") "><button class="btn btn-primary" onclick="location.href='@Url.Action("orderlist","order")';"><i class="fa fa-angle-double-left" aria-hidden="true"></i> Back</button></div>
        <hr class="col-md-12" style="margin-bottom:25px;" />
        <div class="col-md-12" style="margin-bottom:50px;">
            <table class="display" id="tblOrderItemList">
                <thead>
                    <tr>
                        <th>Product Name</th>
                        <th>Purchase Price($)</th>
                        <th>Purchase Price (<i class="fa fa-jpy"></i>)</th>
                        <th>Purchase Price($)</th>
                        <th>Purchase Price (<i class="fa fa-jpy"></i>)</th>
                        <th>Sales Price($)</th>
                        <th>Sales Price (<i class="fa fa-jpy"></i>)</th>
                        <th>Sales Price($)</th>
                        <th>Sales Price (<i class="fa fa-jpy"></i>)</th>
                        <th>Qunatity</th>
                        <th>Qunatity</th>
                        <th>Suppliers</th>
                        <th class="lineitemid"></th>
                    </tr>
                </thead>
            </table>
        </div>
        <div class="row text-center">
            <div>
                @if (Model != null && Model.Internal_status == (int)AritySystems.Common.EnumHelpers.InternalOrderStatus.Draft && userType == (int)AritySystems.Common.EnumHelpers.UserType.Purchase)
                {
                    <button class="btn btn-primary" id="btnPurchasePriceSave">Save & Update Price</button>
                    <button class="btn btn-success" id="btnPurchasePriceUpdated">Notify Sales team to update Sales Price</button>
                }
                else if (Model != null && Model.Internal_status == (int)AritySystems.Common.EnumHelpers.InternalOrderStatus.RedyForSales && userType == (int)AritySystems.Common.EnumHelpers.UserType.Sales)
                {
                    <button class="btn btn-primary" id="btnSalesPriceSave">Save & Update Price</button>
                    <button class="btn btn-success" id="btnSalesPriceUpdated">Notify Admin to approve Order</button>
                }
                else if (Model != null && Model.Internal_status == (int)AritySystems.Common.EnumHelpers.InternalOrderStatus.Approved && userType == (int)AritySystems.Common.EnumHelpers.UserType.Purchase)
                {
                    <button class="btn btn-success" id="btnSubmit">Submit</button>
                }
            </div>
        </div>
        @if (Model != null && Model.Internal_status == (int)AritySystems.Common.EnumHelpers.InternalOrderStatus.Approved && userType == (int)AritySystems.Common.EnumHelpers.UserType.Purchase)
        {
            <div class="row">
                <h3>Supplier Order Items :</h3>
            </div>
            <div class="row">
                <table class="display" id="tblSupplierOrderItemList">
                    <thead>
                        <tr>
                            <th></th>
                            <th>Supplier Name</th>
                            <th>Order Prefix </th>
                            <th>Quantity</th>
                            <th>Status</th>

                        </tr>
                    </thead>
                </table>
            </div>

        }
    </div>
</div>
@section Scripts {
    <script>
        $("#btnSave").click(function () {
            alert("Order Line Item information saved successfully");
        });
        $("#btnSubmit").click(function () {
            debugger;
            var data =[];
            $('#tblOrderItemList tbody tr').each(function (i, el) {
                debugger;
                var $tds = $(this).find('td'),
                    productName = $tds.eq(0).text(),
                    price = $tds.eq(1).text(),
                    quantity = $tds.eq(2).text(),
                    newquantity = $tds.find('input#txtQuantity').val(),
                    supplierid = $tds.find('#jsonSupplierList option:selected').attr('id'),
                    orderLineItem = $(this).find("input#txtOrderLineItemId").val();
                var items = {}
                items["OldQuantity"] = quantity,
                items["NewQuantity"] = newquantity,
                items["supplierid"] = supplierid;
                items["OrderLineItemId"] = orderLineItem;
                debugger;
                data.push(items);
            });
            var addData =JSON.stringify(data);
            debugger;
            $.ajax({
                url: "@Url.Action("AddSupplierOrderLineItems", "Order")",
                method: "POST",
                data: addData,
                dataType: "json",
                contentType: "application/json; charset=utf-8",
            }).done(function (response) 
            {
                location.reload();
            }).fail(function (jqXHR, textStatus) {
                console.log("Request failed: " + textStatus);
            });
        });

        $(document).ready(function () {
            $('#lineitemid').hide();
            var userType = @userType;
            var orderInternalStatus = @Model.Internal_status;
            var tableItmes = $('#tblOrderItemList').DataTable({
                "ajax": "/Order/OrderLineItemList?OrderId=" + @Model.Id,
                "columns": [
                    { "data": "Product_Name" },
                    {
                        "data": null,
                        "render": function (data, type, full) {
                            return '<input type="number" style="width:40%;text-align:center;display:inline-block;" data-item-id="'+data.Id+'" class="purchase-doller-price form-control" value="' + data.Purchase_Price_dollar + '"/> <span style="display:inline-block;padding-left:5px">per item</span>'
                        }
                    },
                    {
                        "data": null,
                        "render": function (data, type, full) {
                            return '<input type="number" style="width:40%;text-align:center;display:inline-block;" data-item-id="'+data.Id+'" class="purchase-rmb-price form-control" value="' + data.Purchase_Price_rmb + '"/> <span style="display:inline-block;padding-left:5px">per item</span>'
                        }
                    },
                    { "data": "Purchase_Price_dollar" },
                    { "data": "Purchase_Price_rmb" },
                    {
                        "data": null,
                        "render": function (data, type, full) {
                            return '<input type="number" style="width:40%;text-align:center;display:inline-block;" data-item-id="'+data.Id+'" class="sales-doller-price form-control" value="' + data.Sales_Price_dollar + '"/> <span style="display:inline-block;padding-left:5px">per item</span>'
                        }
                    },
                    {
                        "data": null,
                        "render": function (data, type, full) {
                            return '<input type="number" style="width:40%;text-align:center;display:inline-block;" data-item-id="'+data.Id+'" class="sales-rmb-price form-control" value="' + data.Sales_Price_rmb + '"/> <span style="display:inline-block;padding-left:5px">per item</span>'
                        }
                    },
                    { "data": "Sales_Price_dollar" },
                    { "data": "Sales_Price_rmb" },
                    { "data": "quantity" },
                    {
                        "data": "quantity",
                        "render": function (data, type, full) {
                            return '<input type="text" id="txtQuantity" value="' + data + '"/>'
                        }
                    },
                    {
                        "data": "Suppliers",
                        "render": function (data, type, row) {
                            ddl = '<select id="jsonSupplierList">';
                            $.each(data, function (i, item) {
                                ddl += '<option id="' + item.Text + '">' + item.Value + '<option>';
                            });
                            ddl += '</select>';

                            return ddl;
                        }
                    },
                    {
                        "data":"Id",
                        "render": function (data, type, full) {
                            return '<input type="hidden" id="txtOrderLineItemId" value="' + data + '"/>'
                        }   
                    }
                ],
                "orderLineItems": [[1, 'asc']]
            });

            if(userType == 4)
            {
                tableItmes.column(1).visible(false);

                tableItmes.column(5).visible(false);
                tableItmes.column(6).visible(false);
                tableItmes.column(7).visible(false);
                tableItmes.column(8).visible(false);
                if(orderInternalStatus ==1)
                {
                    tableItmes.column(3).visible(false);
                    tableItmes.column(4).visible(false);
                    tableItmes.column(4).visible(false);
                    tableItmes.column(10).visible(false);
                    tableItmes.column(11).visible(false);
                }
                else if(orderInternalStatus ==4)
                {
                    tableItmes.column(1).visible(false);
                    tableItmes.column(2).visible(false);
                    tableItmes.column(3).visible(false);
                }
                else
                {
                    tableItmes.column(4).visible(false);
                    tableItmes.column(1).visible(false);
                    tableItmes.column(2).visible(false);
                    tableItmes.column(10).visible(false);
                    tableItmes.column(11).visible(false);
                }
            }
            else if(userType == 3){
                tableItmes.column(1).visible(false);
                tableItmes.column(2).visible(false);
                tableItmes.column(3).visible(false);
                tableItmes.column(4).visible(false);
                tableItmes.column(5).visible(false);
                tableItmes.column(7).visible(false);
                tableItmes.column(10).visible(false);
                tableItmes.column(11).visible(false);
                if(orderInternalStatus ==2)
                {
                    tableItmes.column(7).visible(false);
                    tableItmes.column(8).visible(false);
                }
                else{
                    tableItmes.column(5).visible(false);
                    tableItmes.column(6).visible(false);
                }
            }
            else
            {
                tableItmes.column(1).visible(false);
                tableItmes.column(2).visible(false);
                tableItmes.column(3).visible(false);
                tableItmes.column(4).visible(false);
                tableItmes.column(5).visible(false);
                tableItmes.column(7).visible(false);
                tableItmes.column(8).visible(false);
                tableItmes.column(9).visible(false);
                tableItmes.column(11).visible(false);
            }

            var table = $('#tblSupplierOrderItemList').DataTable({
                "ajax": "/Order/SuppliersOrderLineItemList?OrderId=" + @Model.Id,
                "columns": [
                    {
                        "data": "Id",
                        "ordering": false,
                        "render": function (data, type, full) {
                            return '<input type="hidden" id="txtId" value="' + data + '"/>'
                        }
                    },
                    { "data": "SupplierName" },
                    { "data": "Order_Prefix" },
                    { "data": "Quantity" },
                    {
                        "className": 'order-status',
                        "orderable": false,
                        "data": null,
                        'render': function (data, type, full, meta) {
                            if (data.Status == 1)
                                return '<label class="label label-primary"><i class="fa fa-plane"></i> Draft</label>';
                            else if (data.Status == 4)
                                return '<label class="lable-danger lable"><i class="fa fa-times-circle"></i> Canceled</label>';
                            else if (data.Status == 3)
                                return '<label class="label label-success"><i class="fa fa-check-square-o"></i> Complete</label>';
                            else if (data.Status == 2)
                                return '<label class="label label-default"><i class="fa fa-spinner"></i> In Process</label>';
                            else
                                return '';
                        }
                    }
                ],
                "SupplierOrderLineItems": [[1, 'asc']]
            });


            $("#btnPurchasePriceSave").click(function () {
                var purchaseData =[];
                $("#tblOrderItemList tbody tr").each(function(i){
                    purchaseData.push({
                        "ItemId": $(this).find("input.purchase-rmb-price").attr("data-item-id"),
                        //"DollerPrice":$(this).find("input.purchase-doller-price").val(),
                        "RMBPrice":$(this).find("input.purchase-rmb-price").val()
                    });
                })
                var purchaseMdel = JSON.stringify({"purchaseMdel":purchaseData,"type":"purchase"});

                $.ajax({
                    url: "@Url.Action("PurchasePriceUpdate","Order")",
                    method: "POST",
                    data: purchaseMdel,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json"
                }).done(function (response) {
                    location.reload();
                }).fail(function (jqXHR, textStatus) {
                    console.log("Request failed: " + textStatus);
                });
            });

            $("#btnSalesPriceSave").click(function () {
                var purchaseData =[];
                $("#tblOrderItemList tbody tr").each(function(i){
                    purchaseData.push({
                        "ItemId": $(this).find("input.sales-rmb-price").attr("data-item-id"),
                        "RMBPrice":$(this).find("input.sales-rmb-price").val()
                    });
                })
                var purchaseMdel = JSON.stringify({"purchaseMdel":purchaseData,"type":"sales"});

                $.ajax({
                    url: "@Url.Action("PurchasePriceUpdate","Order")",
                    method: "POST",
                    data: purchaseMdel,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json"
                }).done(function (response) {
                    location.reload();
                }).fail(function (jqXHR, textStatus) {
                    console.log("Request failed: " + textStatus);
                });
            });
            $("#btnSalesPriceUpdated").on("click",function(){
                if(confirm("Make sure Sales price is updated as you won't change it later on. Are you sure you want notify Admin to approve this Order?"))
                {
                    $.ajax({
                        url: "@Url.Action("OrderInternamStatuseChange", "Order")",
                        method: "POST",
                        data: {id:@Model.Id,status:@((int)AritySystems.Common.EnumHelpers.InternalOrderStatus.WaitForAdminAproved)},
                        dataType: "json"
                    }).done(function (response) {
                        location.reload();
                    }).fail(function (jqXHR, textStatus) {
                        console.log("Request failed: " + textStatus);
                    });}
            });

            $("#btnPurchasePriceUpdated").on("click",function(){
                if(confirm("Make sure purchase price is updated as you won't change it later on. Are you sure you want notify sales team to update sales price for this order?"))
                {
                    $.ajax({
                        url: "@Url.Action("OrderInternamStatuseChange", "Order")",
                        method: "POST",
                        data: {id:@Model.Id,status:@((int)AritySystems.Common.EnumHelpers.InternalOrderStatus.RedyForSales)},
                        dataType: "json"
                    }).done(function (response) {
                        location.reload();
                    }).fail(function (jqXHR, textStatus) {
                        console.log("Request failed: " + textStatus);
                    });}
            });
        });
    </script>
}
