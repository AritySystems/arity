@{
    ViewBag.Title = "Account";
    if (Request.Cookies["UserType"] == null)
    {
        Response.Redirect("/user/login");
    }
    var userType = Convert.ToInt32(Request.Cookies["UserType"].Value);
}

<style>
    .child-heading {
        padding: 2% 0 2% 6%;
        font-size: 16px;
        font-weight: 600;
        text-transform: uppercase;
        font-style: italic;
    }

    .alert-warning, .alert-success, .alert-danger {
        padding: 0 6px 0 6px;
    }
</style>
<div class="container">
    <div class="page-header">
        <h1><i class="fa fa-shopping-cart"></i> Accounts</h1>
    </div>
    <div class="row">

        <table id="example" class="display" style="width:100%">
            <thead>
                <tr>
                    <th style="width:10%"></th>
                    <th style="width:10%"></th>
                    <th style="width:35%">Shipping Mark</th>
                    <th style="width:15%">Order Date</th>
                    <th style="width:13%">Total Payment(<i class="fa fa-usd"></i>)</th>
                    <th style="width:13%">Total Payment(<i class="fa fa-jpy"></i>)</th>
                </tr>
            </thead>
        </table>
    </div>
</div>
@section Scripts {
    <script>
        $(".nav #liAccounts").addClass("active");
        function format(d) {
            var html = '<div class="child-heading">All payments information</div><table cellpadding="5" cellspacing="0" border="0" style="margin-left:5%;width:90%;    border: 1px solid #eee;margin-bottom: 2%;"><tr><th>CI</th><th>Doller Ammount</th><th>RMB Ammount</th><th>Date</th></tr>';
             $.ajax({
                        url: "@Url.Action("OrderPaidAmmounts", "Order")",
                        method: "POST",
                 data: { id: d.Id },
                        async:false,
                        dataType: "json"
                    }).done(function (response) {
                        if (response.data != null) {
                            if (response.data.length <= 0) {
                                html += '<tr>' +
                                    '<td colspan="4" align="center">No records found</td>' +
                                    '</tr>';
                            }
                            else {
                                $(response.data).each(function (i, data) {
                                    html += '<tr>' +
                                        '<td>' + data.CI + '</td>' +
                                        '<td><i class="fa fa-usd"></i>  ' + data.DollerPrice + '</td>' +
                                        '<td><i class="fa fa-jpy"></i> ' + data.RMBPrice + '</td>' +
                                        '<td>' + data.Date + '</td>' +
                                        '</tr>';
                                });
                            }

                        }
                    }).fail(function (jqXHR, textStatus) {
                        console.log("Request failed: " + textStatus);
                });
            html += '</table>';
            return html;
        }

        $(document).ready(function () {
            var table = $('#example').DataTable({
                "ajax": "@Url.Action("GetOrderOrderListForAmmount","Order")",
                //aoColumns: [
                //    null,
                //    null,
                //    null,

                //    { sType: 'uk_date' },
                //    null,
                //    null
                //],
                "columns": [
                    {
                        "className": '',
                        "orderable": false,
                        "data": null,
                        'render': function (data, type, full, meta) {
                            return '<a href="/Order/addpayments/' + data.Id + '"><button class="btn btn-primary"><i class="fa fa-plus"></i> Add Payment</button></a>';
                        }
                    },
                    {
                        "className": 'details-control',
                        "orderable": false,
                        "data": null,
                        'render': function (data, type, full, meta) {
                            return '<button class="btn btn-success"><i class="fa fa-plus-circle"></i> Payments</button>';
                        }
                    },
                    { "data": "ShippingMark" },
                    { "data": "CreatedDate" },
                    { "data": "TotalDollerPrice" },
                    { "data": "TotalRMBPrice" }
                ],
                //columnDefs: [
                //    { type: 'date-eu', targets: 3 }
                //],
                //columnDefs: [
                //    { type: 'datetime-us-flex', targets: 3 }
                //],
                //"order": [[3, 'desc']],
                //"columnDefs": [{ "targets": 3, "type": "date-eu" }]
            });

            // Add event listener for opening and closing details
            $('#example tbody').on('click', 'td.details-control', function () {
                var tr = $(this).closest('tr');
                var row = table.row(tr);

                if (row.child.isShown()) {
                    // This row is already open - close it
                    tr.removeClass('shown');
                    row.child.hide();
                    tr.find(".details-control").find(".btn").html("<i class='fa fa-plus-circle'></i> Payment");
                }
                else {
                    // Open this row
                    row.child(format(row.data())).show();
                    tr.find(".details-control").find(".btn").html("<i class='fa fa-minus-circle'></i> Payment");
                    tr.addClass('shown');
                }
            });
            if(@userType == 1)
            {
                table.column(6).visible(false);
            }
        });
        //jQuery.extend(jQuery.fn.dataTableExt.oSort, {
        //    "datetime-us-flex-pre": function (a) {
        //        // If there's no slash, then it's not an actual date, so return zero for sorting
        //        if (a.indexOf('/') === -1) {
        //            return '0';
        //        } else {
        //            // Set optional items to zero
        //            var hour = 0,
        //                min = 0,
        //                ap = 0;
        //            // Execute match. Requires month, day, year. Can be mm/dd or m/d. Can be yy or yyyy
        //            // Time is optional. am/pm is optional
        //            // TODO - remove extra time column from array
        //            var b = a.match(/(\d{1,2})\/(\d{1,2})\/(\d{2,4})( (\d{1,2}):(\d{1,2}))? ?(am|pm|AM|PM|Am|Pm)?/),
        //                month = b[1],
        //                day = b[2],
        //                year = b[3];
        //            // If time exists then output hours and minutes
        //            if (b[4] != undefined) {
        //                hour = b[5];
        //                min = b[6];
        //            }
        //            // if using am/pm then change the hour to 24 hour format for sorting
        //            if (b[7] != undefined) {
        //                ap = b[7];
        //                if (hour == '12') hour = '0';
        //                if (ap == 'pm') hour = parseInt(hour, 10) + 12;
        //            }

        //            // for 2 digit years, changes to 20__ if less than 70
        //            if (year.length == 2) {
        //                if (parseInt(year, 10) < 70) year = '20' + year;
        //                else year = '19' + year;
        //            }
        //            // Converts single digits
        //            if (month.length == 1) month = '0' + month;
        //            if (day.length == 1) day = '0' + day;
        //            if (hour.length == 1) hour = '0' + hour;
        //            if (min.length == 1) min = '0' + min;
        //            var tt = year + month + day + hour + min;

        //            return tt;
        //        }
        //    },
        //    "datetime-us-flex-asc": function (a, b) {
        //        return a - b;
        //    },
        //    "datetime-us-flex-desc": function (a, b) {
        //        return b - a;
        //    }
        //});
    </script>
}




